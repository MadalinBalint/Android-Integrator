type Query {
    characters(page: Int!, filter: FilterCharacter): CharactersDto
    locations(page: Int!, filter: FilterLocation): LocationsDto
    episodes(page: Int!, filter: FilterEpisode): EpisodesDto
}

type CharactersDto {
    info: Info
    results: [CharacterDto]
}

type LocationsDto {
    info: Info
    results: [LocationDto]
}

type EpisodesDto {
    info: Info
    results: [EpisodeDto]
}

type Info {
    count: Int
    pages: Int
    next: Int
    prev: Int
}

type CharacterDto {
    id: ID!
    name: String
    status: String
    species: String
    type: String
    gender: String
    origin: LocationDto
    location: LocationDto
    image: String
    episode: [EpisodeDto]!
    created: String
}

type LocationDto {
    id: ID!
    name: String
    type: String
    dimension: String
    residents: [CharacterDto]!
    created: String
}

type EpisodeDto {
    id: ID!
    name: String
    air_date: String
    episode: String
    characters: [CharacterDto]!
    created: String
    createdat: String
}

input FilterCharacter {
    name: String
    status: String
    species: String
    type: String
    gender: String
}

input FilterLocation {
    name: String
    type: String
    dimension: String
}

input FilterEpisode {
    name: String
    episode: String
}
