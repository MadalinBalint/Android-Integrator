[versions]
compileSdkVersion = "35"
targetSdkVersion = "35"
minSdkVersion = "26"

agp = "8.8.0"
koinBom = "4.0.1"
kotlin = "2.1.0"
kotlinxJson = "1.8.0"
coreKtx = "1.15.0"
junit = "4.13.2"
androidxJunit = "1.2.1"
espressoCore = "3.6.1"
ktor = "3.0.3"
lifecycle = "2.8.7"
activityCompose = "1.10.0"
composeBom = "2025.01.01"
appcompat = "1.7.0"
material = "1.12.0"
coil = "2.7.0"
chucker = "4.1.0"
kover = "0.9.1"

firebase = "33.9.0"
materialIcons = "1.7.7"
navigationRuntimeKtx = "2.8.6"
navigationCompose = "2.8.6"
pagingCompose = "3.3.5"

apollo = "4.1.1"
leakCanary = "2.14"
mockito = "5.4.0"
timber = "5.0.1"

coreTesting = "2.2.0"
kotlinxCoroutinesTest = "1.10.1"
pagingCommonKtx = "3.3.5"
netmock = "0.5.0"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
androidx-paging-common-ktx = { module = "androidx.paging:paging-common-ktx", version.ref = "pagingCommonKtx" }
androidx-paging-testing = { module = "androidx.paging:paging-testing" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidxJunit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-runtime-android = { group = "androidx.compose.runtime", name = "runtime-android" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-navigation-runtime-ktx = { group = "androidx.navigation", name = "navigation-runtime-ktx", version.ref = "navigationRuntimeKtx" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }

# Coil
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Chucker
chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
chucker-no-op = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }

# Icons
androidx-material-icons-core-android = { module = "androidx.compose.material:material-icons-core-android", version.ref = "materialIcons" }
androidx-material-icons-extended-android = { module = "androidx.compose.material:material-icons-extended-android", version.ref = "materialIcons" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-config-ktx = { module = "com.google.firebase:firebase-config-ktx" }

# Koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose" }
koin-androidx-compose-navigation = { module = "io.insert-koin:koin-androidx-compose-navigation" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-kotlinx-xml = { module = "io.ktor:ktor-serialization-kotlinx-xml", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

# kotlinx serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxJson" }

# LeakCanary
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }

# GraphQL
apollo-runtime = { module = "com.apollographql.apollo:apollo-runtime", version.ref = "apollo" }

# Mockito
mockito-kotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockito" }

# Timber logging
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }

# NetMock
netmock-engine = { module = "io.github.denisbronx.netmock:netmock-engine", version.ref = "netmock" }
netmock-resources = { module = "io.github.denisbronx.netmock:netmock-resources", version.ref = "netmock" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "agp" }
apollo = { id = "com.apollographql.apollo", version.ref = "apollo" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
